/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package realestateapp;

import java.awt.CardLayout;
import java.awt.Image;
import java.io.File;
import java.util.UUID;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import realestateapp.models.Property;
import realestateapp.models.User;
import java.util.Properties;
import jakarta.mail.PasswordAuthentication;
import jakarta.mail.Session;
import jakarta.mail.Message;
import jakarta.mail.MessagingException;
import jakarta.mail.Transport;
import jakarta.mail.internet.InternetAddress;
import jakarta.mail.internet.MimeMessage;




/**
 *
 * @author ouran
 */
public class UserPanel extends javax.swing.JFrame {
    private String username;
    private User loggedUser;
    
    private String selectedImagePath = null; // Αποθηκεύει το path της εικόνας
    /**
     * Creates new form UserPanel
     */
    public UserPanel(String username) {
        this.username = username;
        initComponents();
        txtUsername.setText(username);
        // Δημιουργία των panels
        mainPanel.setLayout(new CardLayout());
        mainPanel.add(panelAddProperty, "AddProperty");
        mainPanel.add(panelEditProperty, "EditProperty");
        mainPanel.add(panelFindProperty, "FindProperty");
        mainPanel.add(panelEmpty, "card5");
        setLocationRelativeTo(null);
        CardLayout cl  = (CardLayout) mainPanel.getLayout();
        cl.show(mainPanel, "card5");
//        loadUserProperties();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        panelAddProperty = new javax.swing.JPanel();
        lblUsername = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblNewProperty = new javax.swing.JLabel();
        lblInitialPrice = new javax.swing.JLabel();
        txtInitialPrice = new javax.swing.JTextField();
        lblFinalPrice = new javax.swing.JLabel();
        txtFinalPrice = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtPropertyDescription = new javax.swing.JTextArea();
        lblDescription = new javax.swing.JLabel();
        btnChooseImage = new javax.swing.JButton();
        lblPropertyImagePreview = new javax.swing.JLabel();
        btnAddProperty = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        panelEditProperty = new javax.swing.JPanel();
        scrollTblEdit = new javax.swing.JScrollPane();
        tblProperties = new javax.swing.JTable();
        btnEditProperty = new javax.swing.JButton();
        btnDeleteProperty = new javax.swing.JButton();
        panelFindProperty = new javax.swing.JPanel();
        lblAvailableProperties = new javax.swing.JLabel();
        scrollPaneAvProp = new javax.swing.JScrollPane();
        tblAvailableProperties = new javax.swing.JTable();
        btnConfirmPurchase = new javax.swing.JCheckBox();
        lblGeneratedCode = new javax.swing.JLabel();
        btnBuyProperty = new javax.swing.JButton();
        panelEmpty = new javax.swing.JPanel();
        MenuBar = new javax.swing.JMenuBar();
        menuOptions = new javax.swing.JMenu();
        menuItemAddProperty = new javax.swing.JMenuItem();
        menuItemEditProperty = new javax.swing.JMenuItem();
        menuItemFindProperty = new javax.swing.JMenuItem();
        menuItemLogout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainPanel.setLayout(new java.awt.CardLayout());

        lblUsername.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblUsername.setText("Username:");

        txtUsername.setEditable(false);

        lblNewProperty.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblNewProperty.setText("Στοιχεία Προσθήκης Νέου Ακινήτου");

        lblInitialPrice.setText("Αρχική Τιμή (€):");

        txtInitialPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtInitialPriceKeyReleased(evt);
            }
        });

        lblFinalPrice.setText("Τελική Τιμή με ΦΠΑ (€):");

        txtFinalPrice.setEditable(false);

        txtPropertyDescription.setColumns(20);
        txtPropertyDescription.setRows(5);
        jScrollPane1.setViewportView(txtPropertyDescription);

        lblDescription.setText("Περιγραφή:");

        btnChooseImage.setText("Επιλογή Εικόνας");
        btnChooseImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseImageActionPerformed(evt);
            }
        });

        lblPropertyImagePreview.setToolTipText("");

        btnAddProperty.setText("Αποθήκευση");
        btnAddProperty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPropertyActionPerformed(evt);
            }
        });

        btnCancel.setText("Ακύρωση");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAddPropertyLayout = new javax.swing.GroupLayout(panelAddProperty);
        panelAddProperty.setLayout(panelAddPropertyLayout);
        panelAddPropertyLayout.setHorizontalGroup(
            panelAddPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddPropertyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAddPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelAddPropertyLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblNewProperty)
                        .addGap(33, 33, 33))
                    .addGroup(panelAddPropertyLayout.createSequentialGroup()
                        .addGroup(panelAddPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelAddPropertyLayout.createSequentialGroup()
                                .addGroup(panelAddPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblInitialPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelAddPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtInitialPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(panelAddPropertyLayout.createSequentialGroup()
                                .addComponent(lblFinalPrice)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtFinalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelAddPropertyLayout.createSequentialGroup()
                                .addComponent(lblDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelAddPropertyLayout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(btnCancel)))
                        .addGroup(panelAddPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelAddPropertyLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                                .addGroup(panelAddPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnChooseImage, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAddPropertyLayout.createSequentialGroup()
                                        .addComponent(lblPropertyImagePreview, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(13, 13, 13)))
                                .addGap(33, 33, 33))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAddPropertyLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAddProperty)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        panelAddPropertyLayout.setVerticalGroup(
            panelAddPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddPropertyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAddPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblNewProperty)
                .addGap(18, 18, 18)
                .addGroup(panelAddPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInitialPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtInitialPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChooseImage))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelAddPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelAddPropertyLayout.createSequentialGroup()
                        .addGroup(panelAddPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPropertyImagePreview, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelAddPropertyLayout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addGroup(panelAddPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblFinalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFinalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(22, 22, 22))
                    .addGroup(panelAddPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblDescription)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addGroup(panelAddPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnAddProperty))
                .addGap(33, 33, 33))
        );

        mainPanel.add(panelAddProperty, "card2");

        tblProperties.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Περιγραφή", "Αρχική Τιμή(€):", "Τελική Τιμή με ΦΠΑ(€):", "Εικόνα Ακινήτου"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        scrollTblEdit.setViewportView(tblProperties);

        btnEditProperty.setText("Επεξεργασία");
        btnEditProperty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditPropertyActionPerformed(evt);
            }
        });

        btnDeleteProperty.setText("Διαγραφή");
        btnDeleteProperty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePropertyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelEditPropertyLayout = new javax.swing.GroupLayout(panelEditProperty);
        panelEditProperty.setLayout(panelEditPropertyLayout);
        panelEditPropertyLayout.setHorizontalGroup(
            panelEditPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollTblEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEditPropertyLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(btnDeleteProperty)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 254, Short.MAX_VALUE)
                .addComponent(btnEditProperty)
                .addGap(48, 48, 48))
        );
        panelEditPropertyLayout.setVerticalGroup(
            panelEditPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEditPropertyLayout.createSequentialGroup()
                .addComponent(scrollTblEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(panelEditPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditProperty)
                    .addComponent(btnDeleteProperty))
                .addGap(0, 77, Short.MAX_VALUE))
        );

        mainPanel.add(panelEditProperty, "card4");

        lblAvailableProperties.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblAvailableProperties.setText("Εμφάνιση Διαθέσιμων Ακινήτων προς Πώληση");

        tblAvailableProperties.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Περιγραφή", "Αρχική Τιμή(€):", "Τελική Τιμή με ΦΠΑ(€):", "Εικόνα Ακινήτου"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        scrollPaneAvProp.setViewportView(tblAvailableProperties);

        btnConfirmPurchase.setText("Αποστολή στο email μου");
        btnConfirmPurchase.setToolTipText("");
        btnConfirmPurchase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmPurchaseActionPerformed(evt);
            }
        });

        btnBuyProperty.setText("Επιβεβαίωση Αγοράς");
        btnBuyProperty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuyPropertyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelFindPropertyLayout = new javax.swing.GroupLayout(panelFindProperty);
        panelFindProperty.setLayout(panelFindPropertyLayout);
        panelFindPropertyLayout.setHorizontalGroup(
            panelFindPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFindPropertyLayout.createSequentialGroup()
                .addContainerGap(109, Short.MAX_VALUE)
                .addComponent(lblAvailableProperties)
                .addGap(99, 99, 99))
            .addGroup(panelFindPropertyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelFindPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFindPropertyLayout.createSequentialGroup()
                        .addComponent(lblGeneratedCode, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelFindPropertyLayout.createSequentialGroup()
                        .addComponent(btnConfirmPurchase)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBuyProperty)
                        .addGap(42, 42, 42))))
            .addGroup(panelFindPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(scrollPaneAvProp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 533, Short.MAX_VALUE))
        );
        panelFindPropertyLayout.setVerticalGroup(
            panelFindPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFindPropertyLayout.createSequentialGroup()
                .addComponent(lblAvailableProperties)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 237, Short.MAX_VALUE)
                .addComponent(lblGeneratedCode, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelFindPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfirmPurchase)
                    .addComponent(btnBuyProperty))
                .addGap(18, 18, 18))
            .addGroup(panelFindPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFindPropertyLayout.createSequentialGroup()
                    .addContainerGap(25, Short.MAX_VALUE)
                    .addComponent(scrollPaneAvProp, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(85, Short.MAX_VALUE)))
        );

        mainPanel.add(panelFindProperty, "card3");

        panelEmpty.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                panelEmptyAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        javax.swing.GroupLayout panelEmptyLayout = new javax.swing.GroupLayout(panelEmpty);
        panelEmpty.setLayout(panelEmptyLayout);
        panelEmptyLayout.setHorizontalGroup(
            panelEmptyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 533, Short.MAX_VALUE)
        );
        panelEmptyLayout.setVerticalGroup(
            panelEmptyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 326, Short.MAX_VALUE)
        );

        mainPanel.add(panelEmpty, "card5");

        menuOptions.setText("Menu");

        menuItemAddProperty.setText("Καταχώρηση Ακινήτου");
        menuItemAddProperty.setToolTipText("");
        menuItemAddProperty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemAddPropertyActionPerformed(evt);
            }
        });
        menuOptions.add(menuItemAddProperty);

        menuItemEditProperty.setText("Τροποποίηση Ακινήτου");
        menuItemEditProperty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemEditPropertyActionPerformed(evt);
            }
        });
        menuOptions.add(menuItemEditProperty);

        menuItemFindProperty.setText("Εύρεση Ακινήτου");
        menuItemFindProperty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemFindPropertyActionPerformed(evt);
            }
        });
        menuOptions.add(menuItemFindProperty);

        menuItemLogout.setText("Αποσύνδεση");
        menuItemLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemLogoutActionPerformed(evt);
            }
        });
        menuOptions.add(menuItemLogout);

        MenuBar.add(menuOptions);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void loadUserProperties(){
        DefaultTableModel model = (DefaultTableModel) tblProperties.getModel();
        model.setRowCount(0);
        this.loggedUser = Database.getUserByUsername(username);
        if (loggedUser != null) 
        {
            for (Property property : Database.properties) 
            {  
                // Εμφανίζουμε ΜΟΝΟ ακίνητα που δεν έχουν αγοραστεί και δεν ανήκουν στον loggedUser
                if (property.getBuyer() == null && property.getOwnerUsername().equals(loggedUser.getUsername())) 
                { 

                    Object[] row = {
                        (property.getDescription() == null || property.getDescription().isEmpty()) ? "Χωρίς Περιγραφή" : property.getDescription(),
                        property.getInitialPrice(),
                        property.getFinalPrice(),
                        new ImageIcon(new ImageIcon(property.getImagePath()).getImage().getScaledInstance(120, 90, Image.SCALE_SMOOTH))
                    };
                    model.addRow(row);
                    try
                    {
                        tblProperties.getColumnModel().getColumn(3).setCellRenderer(new ImageRenderer());
                    }
                    catch(Exception ex)
                    {
                        ex.printStackTrace(); // Εκτυπώνει το σφάλμα στη κονσόλα
                        JOptionPane.showMessageDialog(null, "Σφάλμα στην εμφάνιση εικόνας!", "Σφάλμα", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }

            tblAvailableProperties.setRowHeight(90);
        }

        tblAvailableProperties.setRowHeight(90);
    }
    private void addPropertyToTable(DefaultTableModel model, Property property) {
        ImageIcon imageIcon;
        File imageFile = new File(property.getImagePath());
    
        if (imageFile.exists()) {
            imageIcon = new ImageIcon(new ImageIcon(property.getImagePath()).getImage().getScaledInstance(120, 90, Image.SCALE_SMOOTH));
        } 
        else {
            System.out.println("Η εικόνα δεν βρέθηκε: " + property.getImagePath());
            imageIcon = new ImageIcon(new ImageIcon("C:\\Users\\ouran\\OneDrive\\Εικόνες\\Saved Pictures\\realestate.jpg").getImage().getScaledInstance(120, 90, Image.SCALE_SMOOTH));
        }
        
        Object[] row = {
            property.getDescription(),
            property.getInitialPrice(),
            property.getFinalPrice(),
            imageIcon
        };
        model.addRow(row);
        try
        {
            tblAvailableProperties.getColumnModel().getColumn(3).setCellRenderer(new ImageRenderer());
        }
        catch(Exception ex)
        {

        }
        
    tblAvailableProperties.setRowHeight(90);
    }
    private void loadAvailableProperties(){
        DefaultTableModel model = (DefaultTableModel) tblAvailableProperties.getModel();
    model.setRowCount(0);
    
    this.loggedUser = Database.getUserByUsername(username);

    if (loggedUser != null) {
        for (Property property : Database.properties) {  
            // Εμφανίζουμε ΜΟΝΟ ακίνητα που δεν έχουν αγοραστεί και δεν ανήκουν στον loggedUser
            if (property.getBuyer() == null && !property.getOwnerUsername().equals(loggedUser.getUsername())) { 
                    ImageIcon icon = new ImageIcon(new ImageIcon(property.getImagePath()).getImage().getScaledInstance(120, 90, Image.SCALE_SMOOTH));
                Object[] row = {
                    (
                    property.getDescription() == null || property.getDescription().isEmpty()) ? "Χωρίς Περιγραφή" : property.getDescription(),
                    property.getInitialPrice(),
                    property.getFinalPrice(),
                    icon
                };
                model.addRow(row);
                try
                {
                    tblAvailableProperties.getColumnModel().getColumn(3).setCellRenderer(new ImageRenderer());
                }
                catch(Exception ex)
                {

                }
            }
        }
    }

    tblAvailableProperties.setRowHeight(90);
    }
    private boolean isValidEmail(String email) {
        return email.matches("^[A-Za-z0-9+_.-]+@(.+)$");
    }
    private void sendEmail(String to, String subject, String body) {
        final String senderEmail = "your-email@gmail.com";
        final String senderPassword = "your-password"; // Χρησιμοποίησε app password

        Properties props = new Properties();
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.port", "587");

        Session session = Session.getInstance(props, new jakarta.mail.Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(senderEmail, senderPassword);
            }
        });

        try {
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress(senderEmail));
            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(to));
            message.setSubject(subject);
            message.setText(body);

            Transport.send(message);
            System.out.println("Το email στάλθηκε επιτυχώς!");
        } catch (MessagingException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Αποτυχία αποστολής email.", "Σφάλμα", JOptionPane.ERROR_MESSAGE);
        }
    }
    private void menuItemAddPropertyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemAddPropertyActionPerformed
        CardLayout cl = (CardLayout) mainPanel.getLayout();
        cl.show(mainPanel, "AddProperty");
    }//GEN-LAST:event_menuItemAddPropertyActionPerformed

    private void menuItemEditPropertyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemEditPropertyActionPerformed
        CardLayout cl = (CardLayout) mainPanel.getLayout();
        cl.show(mainPanel, "EditProperty");
        loadUserProperties();
    }//GEN-LAST:event_menuItemEditPropertyActionPerformed

    private void menuItemFindPropertyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemFindPropertyActionPerformed
        CardLayout cl = (CardLayout) mainPanel.getLayout();
        cl.show(mainPanel, "FindProperty");
        loadAvailableProperties();
    }//GEN-LAST:event_menuItemFindPropertyActionPerformed

    private void menuItemLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemLogoutActionPerformed
        this.dispose();
        new LoginForm().setVisible(true);
    }//GEN-LAST:event_menuItemLogoutActionPerformed

    private void btnChooseImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseImageActionPerformed
        JFileChooser fileChooser = new JFileChooser(); 
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            selectedImagePath = selectedFile.getAbsolutePath(); // Αποθήκευση διαδρομής εικόνας
            lblPropertyImagePreview.setIcon(new ImageIcon(new ImageIcon(selectedImagePath).getImage().getScaledInstance(100, 80, Image.SCALE_SMOOTH)));
        }
    }//GEN-LAST:event_btnChooseImageActionPerformed

    private void btnAddPropertyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPropertyActionPerformed
        if (txtInitialPrice.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Εισάγετε την αρχική τιμή.", "Σφάλμα", JOptionPane.ERROR_MESSAGE);
        return;
    }

    double initialPrice = Double.parseDouble(txtInitialPrice.getText());
    double finalPrice = initialPrice * 1.24;
    txtFinalPrice.setText(String.format("%.2f", finalPrice));

    String propertyDescription = txtPropertyDescription.getText();
    if (selectedImagePath == null || selectedImagePath.isEmpty()) {
        selectedImagePath = "default.png";
    }

    Property newProperty = new Property(initialPrice, finalPrice, selectedImagePath, propertyDescription, username);
    PropertyManager.addProperty(newProperty); // Προσθήκη στο PropertyManager
    Database.properties.add(newProperty);

    JOptionPane.showMessageDialog(this, "Το ακίνητο προστέθηκε επιτυχώς!", "Επιτυχία", JOptionPane.INFORMATION_MESSAGE);
    
    txtInitialPrice.setText("");
    txtFinalPrice.setText("");
    txtPropertyDescription.setText("");
    lblPropertyImagePreview.setIcon(null);

    loadAvailableProperties();
    }//GEN-LAST:event_btnAddPropertyActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        txtInitialPrice.setText("");
        txtFinalPrice.setText("");
        txtPropertyDescription.setText("");
        lblPropertyImagePreview.setIcon(null);
        // ✅ Μετάβαση στο κενό panel (panelEmpty)
        CardLayout cl = (CardLayout) mainPanel.getLayout();
        cl.show(mainPanel, "card5");
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtInitialPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInitialPriceKeyReleased
        try{
            String text = txtInitialPrice.getText().trim();
            if(!text.isEmpty())
            {
                double initialPrice = Double.parseDouble(text);
                double finalPrice = initialPrice * 1.24;
                txtFinalPrice.setText(String.format("%.2f", finalPrice));
            }
            else
            {
                txtFinalPrice.setText("");
            }
        }
        catch(NumberFormatException ex)
        {
            txtFinalPrice.setText("");
        }
    }//GEN-LAST:event_txtInitialPriceKeyReleased

    private void panelEmptyAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_panelEmptyAncestorAdded
        CardLayout cl = (CardLayout) mainPanel.getLayout();
        cl.show(mainPanel, "card5"); // Αντίστοιχο όνομα του panelEmpty στο CardLayout
    }//GEN-LAST:event_panelEmptyAncestorAdded

    private void btnEditPropertyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditPropertyActionPerformed
        int selectedRow = tblProperties.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Επιλέξτε ένα ακίνητο για επεξεργασία!", "Σφάλμα", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int modelRow = tblProperties.convertRowIndexToModel(selectedRow);

        System.out.println("Selected row: " + selectedRow);
        System.out.println("Converted model row: " + modelRow);
        System.out.println("Total properties: " + loggedUser.getProperties().size());

        // Διορθωμένος έλεγχος αν το property υπάρχει
        if (modelRow < 0 ) {
            JOptionPane.showMessageDialog(this, "Το ακίνητο δεν υπάρχει στη λίστα!", "Σφάλμα", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Property selectedProperty = null;
        for(Property property : Database.properties)
        {
            if(property.getOwnerUsername().equals(loggedUser.getUsername()))
            {
                selectedProperty = property;
            }
        }
        

        if (selectedProperty == null) {
            JOptionPane.showMessageDialog(this, "Το ακίνητο δεν βρέθηκε!", "Σφάλμα", JOptionPane.ERROR_MESSAGE);
            return;
        }

        System.out.println("Editing property: " + selectedProperty.getDescription());

        EditPropertyDialog editDialog = new EditPropertyDialog(this, selectedProperty);
        editDialog.setVisible(true);

        loadUserProperties();  // Επαναφόρτωση των ακινήτων
    }//GEN-LAST:event_btnEditPropertyActionPerformed

    private void btnDeletePropertyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePropertyActionPerformed
        int selectedRow = tblProperties.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Παρακαλώ επιλέξτε ένα ακίνητο για διαγραφή!", "Σφάλμα", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int modelRow = tblProperties.convertRowIndexToModel(selectedRow);

        User loggedUser = Database.getUserByUsername(username);
        if (loggedUser == null) {
            JOptionPane.showMessageDialog(this, "Σφάλμα: Δεν βρέθηκε ο χρήστης!", "Σφάλμα", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (modelRow < 0 || modelRow >= loggedUser.getProperties().size()) {
            JOptionPane.showMessageDialog(this, "Το ακίνητο δεν υπάρχει!", "Σφάλμα", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Property selectedProperty = loggedUser.getProperties().get(modelRow);

        int confirm = JOptionPane.showConfirmDialog(this, "Θέλετε σίγουρα να διαγράψετε το ακίνητο;\n" + selectedProperty.getDescription(),
                "Επιβεβαίωση Διαγραφής", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            loggedUser.getProperties().remove(modelRow);
            Database.properties.remove(selectedProperty);

            JOptionPane.showMessageDialog(this, "Το ακίνητο διαγράφηκε επιτυχώς!", "Επιτυχία", JOptionPane.INFORMATION_MESSAGE);

            loadUserProperties(); // ✅ Ενημέρωση πίνακα
        }
    }//GEN-LAST:event_btnDeletePropertyActionPerformed

    private void btnConfirmPurchaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmPurchaseActionPerformed
        int selectedRow = tblAvailableProperties.getSelectedRow();
    
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Παρακαλώ επιλέξτε ένα ακίνητο για αγορά.", "Σφάλμα", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Property selectedProperty = Database.properties.get(selectedRow);

        // ✅ Προσθήκη ελέγχου αν το ακίνητο είναι null
        if (selectedProperty == null) {
            JOptionPane.showMessageDialog(this, "Σφάλμα: Το ακίνητο δεν βρέθηκε!", "Σφάλμα", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // ✅ Προσθήκη ελέγχου αν ο loggedUser είναι null
        if (loggedUser == null) {
            JOptionPane.showMessageDialog(this, "Σφάλμα: Δεν βρέθηκε ο συνδεδεμένος χρήστης!", "Σφάλμα", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (selectedProperty.getBuyer() == null) {
            JOptionPane.showMessageDialog(this, "Πρέπει να αγοράσετε πρώτα το ακίνητο!", "Σφάλμα", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (chkSendEmail.isSelected()) {
            String email = loggedUser.getEmail();

            if (!isValidEmail(email)) {
                JOptionPane.showMessageDialog(this, "Το email δεν είναι έγκυρο!", "Σφάλμα", JOptionPane.ERROR_MESSAGE);
                return;
            }

            sendEmail(email, "Αγορά Ακινήτου - Κωδικός Πρόσβασης", 
                "Ο κωδικός σας για το ακίνητο '" + selectedProperty.getDescription() + "' είναι: " + selectedProperty.getAccessCode());

            JOptionPane.showMessageDialog(this, "Ο κωδικός στάλθηκε στο email σας!", "Επιτυχία", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnConfirmPurchaseActionPerformed

    private void btnBuyPropertyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuyPropertyActionPerformed
        int selectedRow = tblAvailableProperties.getSelectedRow();
        
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Παρακαλώ επιλέξτε ένα ακίνητο για αγορά.", "Σφάλμα", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        Property selectedProperty = Database.properties.get(selectedRow);
        
        if(selectedProperty.getBuyer() != null) {
            JOptionPane.showMessageDialog(this, "Αυτό το ακίνητο έχει ήδη αγοραστεί!", "Σφάλμα", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String uniqueCode = UUID.randomUUID().toString();
        lblGeneratedCode.setText("Ο μοναδικός σας κωδικός: "+ uniqueCode);
        
        selectedProperty.setBuyer(loggedUser);
        selectedProperty.setAccessCode(uniqueCode);
        
        //loggedUser.setAccessCode(uniqueCode);

        JOptionPane.showMessageDialog(this, "Η αγορά ολοκληρώθηκε επιτυχώς!\nΚωδικός: " + uniqueCode, "Επιτυχία", JOptionPane.INFORMATION_MESSAGE);
        
        loadAvailableProperties();
    }//GEN-LAST:event_btnBuyPropertyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserPanel("username").setVisible(true);
            }
        });
    }
    private javax.swing.JCheckBox chkSendEmail;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JButton btnAddProperty;
    private javax.swing.JButton btnBuyProperty;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnChooseImage;
    private javax.swing.JCheckBox btnConfirmPurchase;
    private javax.swing.JButton btnDeleteProperty;
    private javax.swing.JButton btnEditProperty;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAvailableProperties;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblFinalPrice;
    private javax.swing.JLabel lblGeneratedCode;
    private javax.swing.JLabel lblInitialPrice;
    private javax.swing.JLabel lblNewProperty;
    private javax.swing.JLabel lblPropertyImagePreview;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuItem menuItemAddProperty;
    private javax.swing.JMenuItem menuItemEditProperty;
    private javax.swing.JMenuItem menuItemFindProperty;
    private javax.swing.JMenuItem menuItemLogout;
    private javax.swing.JMenu menuOptions;
    private javax.swing.JPanel panelAddProperty;
    private javax.swing.JPanel panelEditProperty;
    private javax.swing.JPanel panelEmpty;
    private javax.swing.JPanel panelFindProperty;
    private javax.swing.JScrollPane scrollPaneAvProp;
    private javax.swing.JScrollPane scrollTblEdit;
    private javax.swing.JTable tblAvailableProperties;
    private javax.swing.JTable tblProperties;
    private javax.swing.JTextField txtFinalPrice;
    private javax.swing.JTextField txtInitialPrice;
    private javax.swing.JTextArea txtPropertyDescription;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
