/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package realestateapp;

import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.io.File;
import javax.swing.ImageIcon;
import java.awt.Image;
import realestateapp.models.User;
import javax.swing.JOptionPane;
import java.awt.event.KeyEvent;
import javax.swing.JFrame;
import realestateapp.Database;
/**
 *
 * @author ouran
 */
// Κλάση EditUserPropertyForm - Φόρμα για την επεξεργασία ιδιοτήτων χρήστη
public class EditUserPropertyForm extends javax.swing.JFrame {
    // Μεταβλητές πεδία της κλάσης
    private String username;// Το όνομα χρήστη του ακινήτου που επεξεργάζεται
    private double initialPrice;// Η αρχική τιμή του ακινήτου
    private double finalPrice;// Η τελική τιμή μετά τον ΦΠΑ
    private String imagePath;// Η διαδρομή της εικόνας του ακινήτου
    private EditDeleteForm parentForm;// Αναφορά στη φόρμα που κάλεσε την επεξεργασία
    // Constructor της κλάσης EditUserPropertyForm
    public EditUserPropertyForm(EditDeleteForm parentForm, String username, double initialPrice, double finalPrice, String imagePath) {
        this.parentForm = parentForm;
        initComponents();
        this.username = username;
        this.initialPrice = initialPrice;
        this.finalPrice = finalPrice;
        this.imagePath = imagePath;
        setLocationRelativeTo(null);// Τοποθέτηση του παραθύρου στο κέντρο της οθόνης
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);// Κλείσιμο μόνο του παραθύρου και όχι της εφαρμογής
        // Αρχικοποίηση των πεδίων με τα υπάρχοντα δεδομένα
        txtUsername.setText(username);
        txtInitialPrice.setText(String.valueOf(initialPrice));
        txtFinalPrice.setText(String.format("%.2f", finalPrice));
        lblImagePreview.setIcon(new ImageIcon(imagePath)); 
         // Προβολή εικόνας ακινήτου
        if (imagePath != null && !imagePath.isEmpty()) 
        {
            lblImagePreview.setIcon(new ImageIcon(new ImageIcon(imagePath).getImage().getScaledInstance(100, 80, Image.SCALE_SMOOTH)));
        }
        else
        {
            lblImagePreview.setIcon(new ImageIcon("default.png"));
        }
        txtUsername.setEditable(false);// Δεν επιτρέπεται η επεξεργασία του username
        txtFinalPrice.setEditable(false);// Δεν επιτρέπεται η αλλαγή της τελικής τιμής χειροκίνητα
        // Προσθήκη listener στο πεδίο αρχικής τιμής ώστε να ενημερώνεται η τελική τιμή
        txtInitialPrice.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyTyped(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) && c != '.' && c != KeyEvent.VK_BACK_SPACE) 
        {
            evt.consume(); 
            JOptionPane.showMessageDialog(null, "Επιτρέπονται μόνο αριθμοί!", "Προειδοποίηση", JOptionPane.WARNING_MESSAGE);
        }
    }
});
        txtInitialPrice.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
        public void insertUpdate(javax.swing.event.DocumentEvent e) {
            updateFinalPrice();
        }

        public void removeUpdate(javax.swing.event.DocumentEvent e) {
            updateFinalPrice();
        }

        public void changedUpdate(javax.swing.event.DocumentEvent e) {
            updateFinalPrice();
        }
        // Μέθοδος για τον υπολογισμό της τελικής τιμής με ΦΠΑ
        private void updateFinalPrice() {
            try 
            {
                double initialPrice = Double.parseDouble(txtInitialPrice.getText());
                double finalPrice = initialPrice * 1.24; // Υπολογισμός ΦΠΑ 24%
                txtFinalPrice.setText(String.format("%.2f", finalPrice));
            } 
            catch (NumberFormatException ex) {
                txtFinalPrice.setText(""); // Αν η εισαγωγή δεν είναι έγκυρη, καθαρίζουμε το πεδίο
            }
        }
    });
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editFormLbl = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblInitialPrice = new javax.swing.JLabel();
        txtInitialPrice = new javax.swing.JTextField();
        lblFinalPrice = new javax.swing.JLabel();
        txtFinalPrice = new javax.swing.JTextField();
        lblImagePreview = new javax.swing.JLabel();
        btnChooseImage = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        editFormLbl.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        editFormLbl.setText("Επεξεργασία");

        lblUsername.setText("Username:");

        txtUsername.setEditable(false);

        lblInitialPrice.setText("Αρχική Τιμή (€):");

        txtInitialPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtInitialPriceKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtInitialPriceKeyTyped(evt);
            }
        });

        lblFinalPrice.setText("Τελική Τιμή με ΦΠΑ (€):");

        txtFinalPrice.setEditable(false);

        btnChooseImage.setText("Επιλογή Εικόνας");
        btnChooseImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseImageActionPerformed(evt);
            }
        });

        btnSave.setText("Αποθήκευση");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setText("Ακύρωση");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblUsername)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblInitialPrice)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtInitialPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblFinalPrice)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFinalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnChooseImage)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSave)
                            .addComponent(lblImagePreview, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(47, 47, 47))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(editFormLbl))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(btnCancel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(editFormLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnChooseImage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblImagePreview, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUsername))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblInitialPrice)
                            .addComponent(txtInitialPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFinalPrice)
                            .addComponent(txtFinalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCancel)
                            .addComponent(btnSave))
                        .addGap(40, 40, 40))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    // Μέθοδος διαχείρισης του κουμπιού "Αποθήκευση"
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (parentForm == null || parentForm.getTblEditUsersProperties() == null) 
        {
            JOptionPane.showMessageDialog(this, "Πρόβλημα με τη φόρμα διαχείρισης ή τον πίνακα!", "Σφάλμα", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int selectedRow = parentForm.getTblEditUsersProperties().getSelectedRow();
        if (selectedRow >= 0) 
        {
            try 
            {
                // Ανάγνωση των ενημερωμένων τιμών από τη φόρμα
                double newInitialPrice = Double.parseDouble(txtInitialPrice.getText().trim());
                double newFinalPrice = newInitialPrice * 1.24; // 24% ΦΠΑ
                String newImagePath = (selectedImagePath != null && !selectedImagePath.isEmpty()) ? selectedImagePath : (imagePath != null ? imagePath : "default.png");
                // Έλεγχος αν υπάρχει πρόβλημα με την εικόνα
                if (newImagePath == null || newImagePath.isEmpty()) 
                {
                    JOptionPane.showMessageDialog(this, "Υπήρξε πρόβλημα με την εικόνα. Παρακαλώ επιλέξτε ξανά.", "Σφάλμα", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                // Ενημέρωση των δεδομένων του χρήστη
                for (User user : Database.users) 
                {
                    if (user.getUsername().equals(username)) 
                    {
                        user.setInitialPrice(newInitialPrice);
                        user.setFinalPrice(newFinalPrice);
                        user.setImagePath(newImagePath);
                        break;
                    }
                }
            // Ενημέρωση του JTable στο EditDeleteForm
            ImageIcon newImageIcon = new ImageIcon(new ImageIcon(newImagePath).getImage().getScaledInstance(60, 40, Image.SCALE_SMOOTH));
            parentForm.getTblEditUsersProperties().setValueAt(newInitialPrice, selectedRow, 1);
            parentForm.getTblEditUsersProperties().setValueAt(newFinalPrice, selectedRow, 2);
            parentForm.getTblEditUsersProperties().setValueAt(newImageIcon, selectedRow, 3);
            parentForm.getTblEditUsersProperties().repaint();
            // Φόρτωση ανανεωμένων δεδομένων στη φόρμα γονέα
            if (parentForm != null) 
            {
                parentForm.loadUsersPropertiesData();
            } 
            else 
            {
                JOptionPane.showMessageDialog(this, "Δεν ήταν δυνατή η ενημέρωση του πίνακα!", "Σφάλμα", JOptionPane.ERROR_MESSAGE);
            }

            JOptionPane.showMessageDialog(this, "Οι αλλαγές αποθηκεύτηκαν επιτυχώς!", "Επιτυχία", JOptionPane.INFORMATION_MESSAGE);
            this.dispose(); //Κλείσιμο της φόρμας μετά την επιτυχή αποθήκευση
        } 
        catch (NumberFormatException ex) 
        {
            JOptionPane.showMessageDialog(this, "Παρακαλώ εισάγετε έγκυρη αριθμητική τιμή.", "Σφάλμα", JOptionPane.ERROR_MESSAGE);
        }
    } 
    else 
    {
        JOptionPane.showMessageDialog(this, "Παρακαλώ επιλέξτε έναν χρήστη για επεξεργασία.", "Σφάλμα", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnSaveActionPerformed
    private String selectedImagePath;
    // Μέθοδος διαχείρισης του κουμπιού "Επιλογή Εικόνας"
    private void btnChooseImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseImageActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Επιλογή Εικόνας");
        fileChooser.setFileFilter(new FileNameExtensionFilter("Image Files", "jpg", "png", "jpeg"));
        
        int returnValue = fileChooser.showOpenDialog(this);
        if(returnValue == JFileChooser.APPROVE_OPTION)
        {
            File selectedFile = fileChooser.getSelectedFile();
            selectedImagePath = selectedFile.getAbsolutePath();
            ImageIcon icon = new ImageIcon(selectedImagePath); // Πρέπει να χρησιμοποιηθεί το σωστό path
            Image image = icon.getImage().getScaledInstance(100, 80, Image.SCALE_SMOOTH);
            lblImagePreview.setIcon(new ImageIcon(image));
        }
    }//GEN-LAST:event_btnChooseImageActionPerformed
    private void updateFinalPrice(){
        // Μέθοδος υπολογισμού της τελικής τιμής
        try
        {
            String text = txtInitialPrice.getText().trim();
            if(!text.isEmpty())
            {
                double initialPrice = Double.parseDouble(text);
                double finalPrice = initialPrice * 1.24;
                txtFinalPrice.setText(String.format("%.2f", finalPrice));
            }
            else
            {
                txtFinalPrice.setText("");
            }
        }
        catch(NumberFormatException ex){
            txtFinalPrice.setText("");
        }
    }
    // Μέθοδος διαχείρισης του κουμπιού "Ακύρωση"
    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtInitialPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInitialPriceKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInitialPriceKeyTyped

    private void txtInitialPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInitialPriceKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInitialPriceKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditUserPropertyForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditUserPropertyForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditUserPropertyForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditUserPropertyForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        String username = LoggedUserInfo.getLoggedUsername();
        boolean isAdmin = LoggedUserInfo.isLoggedUserAdmin();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new EditDeleteForm(username, isAdmin).setVisible(true);
            }
        });
    }
    public javax.swing.JTable tblEditUsersProperties;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnChooseImage;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel editFormLbl;
    private javax.swing.JLabel lblFinalPrice;
    private javax.swing.JLabel lblImagePreview;
    private javax.swing.JLabel lblInitialPrice;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JTextField txtFinalPrice;
    private javax.swing.JTextField txtInitialPrice;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
